---
title: "Steak Cutting Analysis"
format: html
editor: visual
embed-resources: true
---

# Set-up

```{r}
#| message: false
library(here)
library(readxl)
library(lme4)
library(lmerTest)
library(emmeans)
library(janitor)
library(multcomp)
library(tidyverse)
```

## Data

```{r}
# load in data
color <- read_excel(here('Meat_Data.xlsx'), sheet = 'sorted beef color ')
tbars <- read_excel(here('Meat_Data.xlsx'), sheet = 'sorted beef TBARS')
ph <- read_excel(here('Meat_Data.xlsx'), sheet = 'pH')
```

```{r}
# clean and combine data
master <- color %>%
  mutate(batch = toupper(batch),
         steak = ifelse(batch == "A" & trt == "KK" & display == 0 & index == 2, "b", steak)) %>%
  left_join(tbars, by = c("batch" = "Batch", "steak" = "patty replicates", "display" = "Display",
                           "index", "trt", "muscle")) %>%
  inner_join(ph, by = c("trt" = "Cutting", "steak", "muscle", "index", "batch", "display")) %>%
  select(batch, trt, display, index, steak, muscle, `average L`, `average a`, `average b`, `calculated TEP equivalent`, `pH-ave`) %>%
  clean_names() %>%
  rename('ph_average' = 'p_h_ave', 'tep' = 'calculated_tep_equivalent') %>%
  mutate(display = as.factor(display))
```

# Linear Mixed Effects Regression

## Functions

```{r}
# Function to plot estimated marginal means
plot_model <- function(df, response, ests) {
  ests_tibble <- as_tibble(ests)

  ggplot(ests_tibble, aes(x = display, y = emmean, color = muscle)) +
    geom_point() +
    geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
    # Overlay the original observed data for a gut check
    # geom_point(data = df, aes(x = display, y = .data[[response]]), alpha = 0.5, width = 0.1, color = "grey") +
    facet_wrap(~ trt) +
    labs(title = paste("Estimated Marginal Means for", response),
         x = "Display",
         y = response) +
    theme_bw() +
    theme(
      panel.grid.minor.x = element_blank(),
      panel.grid.minor.y = element_blank()
      )
}
```

## Average L\*

### Model Selection

```{r}
chisq.test(master$average_l, master$batch)

null_l <- lmer(average_l ~ (1 | batch), data = master)

# Main effects
m1_l <- lmer(average_l ~ trt + muscle + display + (1 | batch), data = master)

# All interactions + main effects
m2_l <- lmer(average_l ~ trt*muscle*display + (1 | batch), data = master)

# Two-way interactions + main effects
m3_l <- lmer(average_l ~ trt + muscle + display + 
                     trt:muscle + trt:display + muscle:display + 
                     (1 | batch), 
             data = master)

# summary(null_l, corr = FALSE)
# summary(m1_l, corr = FALSE)
# summary(m2_l, corr = FALSE)
# summary(m3_l, corr = FALSE)

performance::compare_performance(null_l, m1_l, m2_l, m3_l)
# anova(m1_l, null_l)
# anova(m1_l, m2_l)
# anova(m3_l, m2_l)
# anova(m1_l, m3_l)

anova(m3_l)
summary(m3_l)
```

Model 3 is the best model

### Plots

```{r}
ests <- emmeans(m3_l, 
                specs = ~ trt + muscle + display + 
                     trt:muscle + trt:display + muscle:display, 
                infer = c(TRUE, TRUE),
                level = .99)

plot_model(master, 'average_l', ests)

letter_plot <- cld(ests, level = .01, adjust = "tukey", Letters = letters)
letter_plot <- letter_plot[order(letter_plot$trt, letter_plot$display, letter_plot$muscle), ]
plot(letter_plot, main = "Letter Plot for Wool and Tension", ylab = "Estimated Marginal Means") + 
  theme_bw() +
  geom_hline(yintercept = seq(2.5, 18.5, 2))
```

## Average a

### Model Selection

```{r}
chisq.test(master$average_a, master$batch)

null_a <- lmer(average_a ~ (1 | batch), data = master)

# Main effects
m1_a <- lmer(average_a ~ trt + muscle + display + (1 | batch), data = master)

# All interactions + main effects
m2_a <- lmer(average_a ~ trt*muscle*display + (1 | batch), data = master)

# Two-way interactions + main effects
m3_a <- lmer(average_a ~ trt + muscle + display + 
                     trt:muscle + trt:display + muscle:display + 
                     (1 | batch), 
             data = master)

# summary(null_a, corr = FALSE)
# summary(m1_a, corr = FALSE)
# summary(m2_a, corr = FALSE)
# summary(m3_a, corr = FALSE)

performance::compare_performance(null_a, m1_a, m2_a, m3_a)
# anova(m1_a, null_a)
# anova(m1_a, m2_a)
# anova(m3_a, m2_a)
# anova(m1_a, m3_a)

anova(m1_a)
summary(m1_a)
```

Model 1 is the best model

### Plots

```{r}
ests <- emmeans(m1_a, 
                specs = ~ trt + muscle + display, 
                infer = c(TRUE, TRUE),
                level = .99)

ests
letter_plot
plot_model(master, 'average_a', ests)

letter_plot <- cld(ests, level = .01, adjust = "tukey", Letters = letters)
letter_plot <- letter_plot[order(letter_plot$trt, letter_plot$display, letter_plot$muscle), ]
plot(letter_plot, main = "Letter Plot for Wool and Tension", ylab = "Estimated Marginal Means") + 
  theme_bw() +
  geom_hline(yintercept = seq(2.5, 18.5, 2))
```

## Average b

### Model Selection

```{r}
chisq.test(master$average_b, master$batch)

null_b <- lmer(average_b ~ (1 | batch), data = master)

# Main effects
m1_b <- lmer(average_b ~ trt + muscle + display + (1 | batch), data = master)

# All interactions + main effects
m2_b <- lmer(average_b ~ trt*muscle*display + (1 | batch), data = master)

# Two-way interactions + main effects
m3_b <- lmer(average_b ~ trt + muscle + display + 
                     trt:muscle + trt:display + muscle:display + 
                     (1 | batch), 
             data = master)

# summary(null_b, corr = FALSE)
# summary(m1_b, corr = FALSE)
# summary(m2_b, corr = FALSE)
# summary(m3_b, corr = FALSE)

performance::compare_performance(null_b, m1_b, m2_b, m3_b)
# anova(m1_b, null_b)
# anova(m1_b, m2_b)
# anova(m3_b, m2_b)
# anova(m1_b, m3_b)

anova(m1_b)
```

Model 1 is the best model

### Plots

```{r}
ests <- emmeans(m1_b, 
                specs = ~ trt + muscle + display, 
                infer = c(TRUE, TRUE),
                level = .99)

plot_model(master, 'average_b', ests)

letter_plot <- cld(ests, level = .01, adjust = "tukey", Letters = letters)
letter_plot <- letter_plot[order(letter_plot$trt, letter_plot$display, letter_plot$muscle), ]
plot(letter_plot, main = "Letter Plot for Wool and Tension", ylab = "Estimated Marginal Means") + 
  theme_bw() +
  geom_hline(yintercept = seq(2.5, 18.5, 2))
```

## TEP

### Model Selection

```{r}
chisq.test(master$tep, master$batch)

null_tep <- lmer(tep ~ (1 | batch), data = master)

# Main effects
m1_tep <- lmer(tep ~ trt + muscle + display + (1 | batch), data = master)

# All interactions + main effects
m2_tep <- lmer(tep ~ trt*muscle*display + (1 | batch), data = master)

# Two-way interactions + main effects
m3_tep <- lmer(tep ~ trt + muscle + display + 
                     trt:muscle + trt:display + muscle:display + 
                     (1 | batch), 
             data = master)

# summary(null_tep, corr = FALSE)
# summary(m1_tep, corr = FALSE)
# summary(m2_tep, corr = FALSE)
# summary(m3_tep, corr = FALSE)

performance::compare_performance(null_tep, m1_tep, m2_tep, m3_tep)
# anova(m1_tep, null_tep)
# anova(m1_tep, m2_tep)
# anova(m3_tep, m2_tep)
# anova(m1_tep, m3_tep)

anova(m1_tep)
```

Model 1 is the best model

### Plots

```{r}
ests <- emmeans(m1_tep, 
                specs = ~ trt + muscle + display, 
                infer = c(TRUE, TRUE),
                level = .99)

plot_model(master, 'tep', ests)

letter_plot <- cld(ests, level = .01, adjust = "tukey", Letters = letters)
letter_plot <- letter_plot[order(letter_plot$trt, letter_plot$display, letter_plot$muscle), ]
plot(letter_plot, main = "Letter Plot for Wool and Tension", ylab = "Estimated Marginal Means") + 
  theme_bw() +
  geom_hline(yintercept = seq(2.5, 18.5, 2))
```

## Average pH

### Model Selection

```{r}
chisq.test(master$ph_average, master$batch)

null_ph <- lmer(ph_average ~ (1 | batch), data = master)

# Main effects
m1_ph <- lmer(ph_average ~ trt + muscle + display + (1 | batch), data = master)

# All interactions + main effects
m2_ph <- lmer(ph_average ~ trt*muscle*display + (1 | batch), data = master)

# Two-way interactions + main effects
m3_ph <- lmer(ph_average ~ trt + muscle + display + 
                     trt:muscle + trt:display + muscle:display + 
                     (1 | batch), 
             data = master)

# summary(null_ph, corr = FALSE)
# summary(m1_ph, corr = FALSE)
# summary(m2_ph, corr = FALSE)
# summary(m3_ph, corr = FALSE)

performance::compare_performance(null_ph, m1_ph, m2_ph, m3_ph)
# anova(m1_ph, null_ph)
# anova(m1_ph, m2_ph)
# anova(m3_ph, m2_ph)
# anova(m1_ph, m3_ph)

anova(m1_ph)
```

Model 1 is the best model

### Plots

```{r}
ests <- emmeans(m1_ph, 
                specs = ~ trt + muscle + display, 
                infer = c(TRUE, TRUE),
                level = .99)

plot_model(master, 'ph_average', ests)

letter_plot <- cld(ests, level = .01, adjust = "tukey", Letters = letters)
letter_plot <- letter_plot[order(letter_plot$trt, letter_plot$display, letter_plot$muscle), ]
plot(letter_plot, main = "Letter Plot for Wool and Tension", ylab = "Estimated Marginal Means") + 
  theme_bw() +
  geom_hline(yintercept = seq(2.5, 18.5, 2))
```

# Interpretations

-   Adjusted ICC: $$𝛔^2_{between}/(𝛔^2_{between} + 𝛔^2_{within})$$

    -   Adjusted ICC: Focuses only on random effects, ignoring fixed effects. Useful for analyzing the impact of random effects alone.

    -   Unadjusted ICC: Includes both random and fixed effects in the variability calculation. Useful for a broader understanding of variability, including the influence of fixed effects.

    -   \_\_% of the variability in {response variable} is accounted for by the difference between {grouping variable}.

    -   i.e. 42% of the variability in Average L\* is accounted for by the difference between batches (and the remaining 58% is due to the difference within batches).

    -   NOTE: We are using the Adjusted ICC.

-   ANOVA Output:

    -   trt:
    -   muscle:
    -   display:

-   Letter Plot:
